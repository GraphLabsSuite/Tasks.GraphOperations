"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * The Edge implementation of the IEdge interface
 * @classdesc
 */
var Edge = /** @class */ (function () {
    /**
     * @constructor
     * @param vertexOne
     * @param vertexTwo
     */
    function Edge(vertexOne, vertexTwo, name, weightLabel) {
        if (name === void 0) { name = undefined; }
        if (weightLabel === void 0) { weightLabel = undefined; }
        this._vertexOne = vertexOne;
        this._vertexTwo = vertexTwo;
        this._isDirected = false;
        this._name = name;
        this._weightLabel = weightLabel;
    }
    Object.defineProperty(Edge.prototype, "vertexOne", {
        /**
         * @property
         * @public
         * Getter for _vertexOne field
         * @return {IVertex}
         */
        get: function () {
            return this._vertexOne;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Edge.prototype, "vertexTwo", {
        /**
         * @property
         * @public
         * Getter for _vertexTwo field
         * @return {IVertex}
         */
        get: function () {
            return this._vertexTwo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Edge.prototype, "name", {
        /**
         * @property
         * @public
         * Getter for _isDirected field
         * @return {boolean}
         */
        get: function () {
            return this._name;
        },
        /**
         * @property
         * @public
         * Setter for _name field
         */
        set: function (value) {
            this._name = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Edge.prototype, "weightLabel", {
        /**
       * @property
       * @public
       * Getter for _weightLabel field
       * @return {number}
       */
        get: function () {
            return this._weightLabel;
        },
        /**
       * @property
       * @public
       * Setter for _weightLabel field
       */
        set: function (value) {
            this._weightLabel = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Edge.prototype, "isDirected", {
        /**
         * @property
         * @public
         * Getter for _isDirected field
         * @return {boolean}
         */
        get: function () {
            return this._isDirected;
        },
        enumerable: true,
        configurable: true
    });
    Edge.prototype.isIncident = function (vertex) {
        return vertex.equals(this.vertexOne) || vertex.equals(this.vertexTwo);
    };
    /**
     *
     * @param edge
     * @returns {boolean}
     */
    Edge.prototype.equals = function (edge) {
        if (edge == null)
            return false;
        return this.isDirected == edge.isDirected &&
            (this.vertexOne.equals(edge.vertexOne) && this.vertexTwo.equals(edge.vertexTwo)
                || !this.isDirected && this.vertexOne.equals(edge.vertexOne) && this.vertexTwo.equals(edge.vertexTwo));
    };
    return Edge;
}());
exports.Edge = Edge;
//# sourceMappingURL=Edge.js.map