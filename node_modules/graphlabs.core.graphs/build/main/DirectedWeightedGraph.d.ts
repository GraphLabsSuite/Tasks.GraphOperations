import { Vertex } from "./Vertex";
import { DirectedWeightedEdge } from "./DirectedWeightedEdge";
import { IVertex } from "../types/IVertex";
import { Graph } from "./Graph";
export declare class DirectedWeightedGraph extends Graph<Vertex, DirectedWeightedEdge> {
    /**
     * @static
     * Static builder for the directed weighted graph
     * @param verticesNumber
     * @return {DirectedWeightedGraph}
     */
    static createEmpty(verticesNumber: number): DirectedWeightedGraph;
    /**
     * @override
     * @property
     * @public
     * Shows the graph is directed
     * @return {boolean}
     */
    get isDirected(): boolean;
    /**
     * @override
     * @property
     * @public
     * Shows the graph is not able to have multiple edges
     * @return {boolean}
     */
    get allowMultipleEdges(): boolean;
    /**
     * @constructor
     */
    constructor();
    /**
     * @public
     * Gets the edge by two vertices incident to it
     * @param vertexOne
     * @param vertexTwo
     */
    getEdge(vertexOne: IVertex, vertexTwo: IVertex): DirectedWeightedEdge[];
    /**
     * @override
     * Deep graph-cloning
     * @returns {DirectedWeightedGraph}
     */
    clone(): DirectedWeightedGraph;
}
