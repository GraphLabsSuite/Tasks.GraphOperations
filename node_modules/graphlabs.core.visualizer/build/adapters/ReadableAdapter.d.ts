import { Vertex, Edge, IEdge, IGraph, IVertex } from 'graphlabs.core.graphs';
import { CircleGraphVisualizer, GeometricEdge, GeometricVertex } from '..';
import { Component } from 'react';
export interface RAProps {
    className?: string;
    graph: IGraph<IVertex, IEdge>;
    namedEdges?: boolean;
    vertexNaming?: boolean;
    withoutDragging?: boolean;
    edgeNaming?: boolean;
    incidentEdges?: boolean;
    weightedEdges?: boolean;
}
export interface State {
    events: Event[];
}
export declare class ReadableAdapter extends Component<RAProps, State> {
    ref: SVGSVGElement;
    graphVisualizer: CircleGraphVisualizer;
    vertexOne: IVertex;
    vertexTwo: IVertex;
    addVertex(): void;
    addEdge(): void;
    removeVertex(): void;
    removeEdge(): void;
    renderSvg(): void;
    addEdgeToSVG(elem: GeometricEdge<Edge>): void;
    addVertexToSVG(elem: GeometricVertex<Vertex>): void;
    removeVertexFromSVG(elem: GeometricVertex<Vertex>): void;
    removeEdgeFromSVG(elem: GeometricEdge<Edge>): void;
    updateSvg(): void;
    componentDidMount(): void;
    constructor(props: RAProps);
    updateGraph(): void;
    render(): JSX.Element;
}
