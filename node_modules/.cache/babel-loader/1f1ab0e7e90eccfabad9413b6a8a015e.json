{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ilya/UIR/test_5/src/App.tsx\";\nimport React from 'react'; //import logo from './logo.svg';\n\nimport './App.css'; //import { IGraphView, ToolButtonList, IMatrixView, INGraphsView, graphActionCreators, State } from \"graphlabs.core.template\";\n\nimport { GraphVisualizer, Template, Toolbar, StudentMark, Console } from \"graphlabs.core.template\";\nimport styles from './Template.module.scss';\nimport 'graphlabs.core.template/dist/main.css';\nimport { graphModel1, graphModel2, graphModel } from './ForMyGraphModel';\nimport { message_0, num_0 } from './ForMeVars';\n\nclass App extends Template {\n  /*public constructor(props: {}) { // не совсем понимаю, почему овервайт этих функций происходит автоматически и без конструктора\n      super(props);\n      this.render = this.render.bind(this);\n      this.getArea = this.getArea.bind(this);\n      this.task = this.task.bind(this);\n      this.getTaskToolbar = this.getTaskToolbar.bind(this);\n       store.subscribe(() => {\n          if (store.getState().app.status !== this.state.status) {\n              this.setState({\n                  status: store.getState().app.status,\n              });\n          }\n      });\n  }*/\n  render() {\n    const Task = this.task();\n    const Toolbar = this.getTaskToolbar();\n    const Area = this.getArea51();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.App,\n      id: \"wrap\",\n      children: this.state.status ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E. \\u041E\\u0436\\u0438\\u0434\\u0430\\u0439\\u0442\\u0435 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430 \\u043E\\u0442 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.MainRow,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.GraphCell,\n            children: /*#__PURE__*/_jsxDEV(Area, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.ToolCell,\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.TaskCell,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0417\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.LeftBottom,\n          children: /*#__PURE__*/_jsxDEV(StudentMark, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.LowRow,\n          children: /*#__PURE__*/_jsxDEV(Console, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  } //<Task/>\n\n\n  getTaskToolbar() {\n    return Toolbar;\n  }\n\n  getArea51() {\n    return () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(GraphVisualizer, {\n          graph: graphModel,\n          adapterType: 'writable',\n          namedEdges: false,\n          vertexNaming: true,\n          withoutDragging: true,\n          edgeNaming: false,\n          incidentEdges: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }, this); //return () =>\n    //    <GraphVisualizer\n    //        graph={graphModelres}\n    //        adapterType={'readable'}\n    //        namedEdges={false}\n    //        vertexNaming={false}\n    //        withoutDragging={false}\n    //        edgeNaming={false}\n    //        incidentEdges={false}\n    //    />;\n  }\n\n  task() {\n    graphModel.vertices.forEach(v => console.log(`id = ${v.id}; label = ${v.label}; name = ${v.name}; wawe=${v.wave}.\\n`));\n    return () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message_0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [num_0 !== 6 ? \"1.\" : '', /*#__PURE__*/_jsxDEV(GraphVisualizer, {\n            graph: graphModel1,\n            adapterType: 'readable',\n            namedEdges: false,\n            vertexNaming: false,\n            withoutDragging: true,\n            edgeNaming: false,\n            incidentEdges: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [num_0 !== 6 ? \"2.\" : '', /*#__PURE__*/_jsxDEV(GraphVisualizer, {\n            graph: graphModel2,\n            adapterType: 'readable',\n            namedEdges: false,\n            vertexNaming: false,\n            withoutDragging: true,\n            edgeNaming: false,\n            incidentEdges: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ilya/UIR/test_5/src/App.tsx"],"names":["React","GraphVisualizer","Template","Toolbar","StudentMark","Console","styles","graphModel1","graphModel2","graphModel","message_0","num_0","App","render","Task","task","getTaskToolbar","Area","getArea51","state","status","MainRow","GraphCell","ToolCell","TaskCell","LeftBottom","LowRow","vertices","forEach","v","console","log","id","label","name","wave"],"mappings":"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","sourcesContent":["import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//import { IGraphView, ToolButtonList, IMatrixView, INGraphsView, graphActionCreators, State } from \"graphlabs.core.template\";\nimport { GraphVisualizer, Template, Toolbar, store, StudentMark, Console } from \"graphlabs.core.template\";\nimport {  /*Graph, SccBuilder,*/ IGraph, IVertex, IEdge, Vertex, Edge, GraphGenerator } from \"graphlabs.core.graphs\";\nimport styles from './Template.module.scss';\nimport 'graphlabs.core.template/dist/main.css';\n\nimport { /*Component,*/ SFC} from 'react';\nimport { init1, graphModel1, init2, graphModel2, initres, graphModelres, init, graphModel } from './ForMyGraphModel';\nimport Ops from './Ops';\nimport { message_0, num_0, num_0_changing, message_0_changing } from './ForMeVars';\n\nclass App extends Template {\n\n    /*public constructor(props: {}) { // не совсем понимаю, почему овервайт этих функций происходит автоматически и без конструктора\n        super(props);\n        this.render = this.render.bind(this);\n        this.getArea = this.getArea.bind(this);\n        this.task = this.task.bind(this);\n        this.getTaskToolbar = this.getTaskToolbar.bind(this);\n\n        store.subscribe(() => {\n            if (store.getState().app.status !== this.state.status) {\n                this.setState({\n                    status: store.getState().app.status,\n                });\n            }\n        });\n    }*/\n\n    public render():JSX.Element {\n        const Task: any = this.task();\n        const Toolbar = this.getTaskToolbar();\n        const Area = this.getArea51();\n        return (\n            <div className={styles.App} id=\"wrap\">\n                {this.state.status\n                    ? <p>Задание выполнено. Ожидайте ответа от сервера...</p>\n                    : (\n                        <div>\n                            <div className={styles.MainRow}>\n                                <div className={styles.GraphCell}>\n                                    <Area/>\n                                </div>\n                                <div className={styles.ToolCell}>\n                                    <Toolbar/>\n                                </div>\n                                <div className={styles.TaskCell}>\n                                    <p>Задание</p>\n                                    <Task/>\n                                </div>\n                            </div>\n                            <div className={styles.LeftBottom}>\n                                <StudentMark/>\n                            </div>\n                            <div className={styles.LowRow}>\n                                <Console/>\n                            </div>\n                        </div>)}\n            </div>\n        );\n    }//<Task/>\n\n    protected getTaskToolbar() {\n        return Toolbar;\n    }\n\n    protected getArea51(): SFC<{}> {\n        return () => <div>\n            <p>\n                <GraphVisualizer\n                    graph={graphModel}\n                    adapterType={'writable'}\n                    namedEdges={false}\n                    vertexNaming={true}\n                    withoutDragging={true}\n                    edgeNaming={false}\n                    incidentEdges={true}\n                />\n            </p>\n        </div>;\n\n        //return () =>\n        //    <GraphVisualizer\n        //        graph={graphModelres}\n        //        adapterType={'readable'}\n        //        namedEdges={false}\n        //        vertexNaming={false}\n        //        withoutDragging={false}\n        //        edgeNaming={false}\n        //        incidentEdges={false}\n        //    />;\n    }\n\n    protected task(): SFC<{}> {\n        graphModel.vertices.forEach(v => (console.log(`id = ${v.id}; label = ${v.label}; name = ${v.name}; wawe=${v.wave}.\\n`)));\n        return () =>\n            <div>\n                <p>\n                    {message_0}\n                </p>\n                <div>\n                    <p>\n                        {num_0!==6?\"1.\":''}<GraphVisualizer\n                            graph={graphModel1}\n                            adapterType={'readable'}\n                            namedEdges={false}\n                            vertexNaming={false}\n                            withoutDragging={true}\n                            edgeNaming={false}\n                            incidentEdges={true}\n                        />\n                    </p>\n                    <p>\n                        {num_0!==6?\"2.\":''}<GraphVisualizer\n                            graph={graphModel2}\n                            adapterType={'readable'}\n                            namedEdges={false}\n                            vertexNaming={false}\n                            withoutDragging={true}\n                            edgeNaming={false}\n                            incidentEdges={true}\n                        />\n                    </p>\n                </div>\n            </div>;\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}