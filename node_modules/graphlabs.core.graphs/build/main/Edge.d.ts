import { IVertex } from "../types/IVertex";
import { IEdge } from "../types/IEdge";
/**
 * The Edge implementation of the IEdge interface
 * @classdesc
 */
export declare class Edge implements IEdge {
    /**
     * @property
     * @private
     * The first vertex incident to the edge
     */
    private _vertexOne;
    /**
     * @property
     * @private
     * The second vertex incident to the edge
     */
    private _vertexTwo;
    /**
     * @property
     * @private
     * Mark shows whether the edge is directed or not
     */
    private _isDirected;
    /**
     * @property
     * @public
     * The name of the edge
     */
    private _name;
    /**
   * @property
   * @public
   * The additional weight label
   */
    private _weightLabel;
    /**
     * @property
     * @public
     * Getter for _vertexOne field
     * @return {IVertex}
     */
    get vertexOne(): IVertex;
    /**
     * @property
     * @public
     * Getter for _vertexTwo field
     * @return {IVertex}
     */
    get vertexTwo(): IVertex;
    /**
     * @property
     * @public
     * Getter for _isDirected field
     * @return {boolean}
     */
    get name(): string;
    /**
   * @property
   * @public
   * Getter for _weightLabel field
   * @return {number}
   */
    get weightLabel(): string;
    /**
     * @property
     * @public
     * Setter for _name field
     */
    set name(value: string);
    /**
   * @property
   * @public
   * Setter for _weightLabel field
   */
    set weightLabel(value: string);
    /**
     * @property
     * @public
     * Getter for _isDirected field
     * @return {boolean}
     */
    get isDirected(): boolean;
    /**
     * @constructor
     * @param vertexOne
     * @param vertexTwo
     */
    constructor(vertexOne: IVertex, vertexTwo: IVertex, name?: string, weightLabel?: string);
    isIncident(vertex: IVertex): boolean;
    /**
     *
     * @param edge
     * @returns {boolean}
     */
    equals(edge: IEdge): boolean;
}
