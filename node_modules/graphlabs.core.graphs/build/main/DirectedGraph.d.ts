import { Graph } from "./Graph";
import { Vertex } from "./Vertex";
import { DirectedEdge } from "./DirectedEdge";
import { IVertex } from "../types/IVertex";
import { IGraph } from "../types/IGraph";
import { IEdge } from "../types/IEdge";
/**
 * Directed graph
 * @classdes
 */
export declare class DirectedGraph extends Graph<Vertex, DirectedEdge> {
    /**
     * @constructor
     */
    constructor();
    /**
     * Gets the direct edge by two vertices incident to it
     * @param vertexOne
     * @param vertexTwo
     * @returns {DirectedEdge}
     */
    getEdge(vertexOne: IVertex, vertexTwo: IVertex): DirectedEdge[];
    buildSCC(): IGraph<IVertex, IEdge>[];
    /**
     * Returns the copy of the graph
     * @returns {DirectedGraph}
     */
    clone(): DirectedGraph;
}
