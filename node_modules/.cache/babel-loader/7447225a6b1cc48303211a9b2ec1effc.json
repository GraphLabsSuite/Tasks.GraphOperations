{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * @classdesc\r\n * Checkers for dominating and minimal dominating sets\r\n */\n\nvar CheckSet =\n/** @class */\nfunction () {\n  function CheckSet() {}\n  /**\r\n   * Checker for a dominating set\r\n   * @param vSet\r\n   * @param givenGraph\r\n   * @returns {boolean}\r\n   * @constructor\r\n   */\n\n\n  CheckSet.prototype.isExternalStability = function (vSet, givenGraph) {\n    var extendedSetofVertex = [];\n\n    for (var _i = 0, vSet_1 = vSet; _i < vSet_1.length; _i++) {\n      var vertex = vSet_1[_i];\n      extendedSetofVertex.push(vertex);\n    } //We add vertices adjacent with the chosen one into extended set of vertices\n\n\n    for (var _a = 0, vSet_2 = vSet; _a < vSet_2.length; _a++) {\n      var vertex = vSet_2[_a];\n\n      var _loop_1 = function (edge) {\n        if (edge.vertexOne == vertex && !extendedSetofVertex.filter(function (v) {\n          return v.equals(edge.vertexTwo);\n        })[0]) {\n          extendedSetofVertex.push(edge.vertexTwo);\n        }\n\n        if (edge.vertexTwo == vertex && !extendedSetofVertex.filter(function (v) {\n          return v.equals(edge.vertexOne);\n        })[0]) {\n          extendedSetofVertex.push(edge.vertexOne);\n        }\n      };\n\n      for (var _b = 0, _c = givenGraph.edges; _b < _c.length; _b++) {\n        var edge = _c[_b];\n\n        _loop_1(edge);\n      }\n    }\n\n    var _loop_2 = function (vertex) {\n      if (!extendedSetofVertex.filter(function (v) {\n        return v.equals(vertex);\n      })[0]) return {\n        value: false\n      };\n    }; //We check whether the graph has vertices that are not adjacent to the ones in the extended set\n\n\n    for (var _d = 0, _e = givenGraph.vertices; _d < _e.length; _d++) {\n      var vertex = _e[_d];\n\n      var state_1 = _loop_2(vertex);\n\n      if (typeof state_1 === \"object\") return state_1.value;\n    }\n\n    return true;\n  };\n  /**\r\n   * Checker for minimal dominating set\r\n   * @param setEs\r\n   * @param givenGraph\r\n   * @returns {boolean}\r\n   */\n\n\n  CheckSet.prototype.isMinimal = function (setEs, givenGraph) {\n    var leadFlag = true;\n    var flag = true;\n\n    var _loop_3 = function (vertex) {\n      var newSet = [];\n      setEs.forEach(function (v) {\n        if (!v.equals(vertex)) newSet.push(v);\n      });\n      flag = this_1.isExternalStability(newSet, givenGraph);\n      if (flag) leadFlag = false;\n    };\n\n    var this_1 = this;\n\n    for (var _i = 0, setEs_1 = setEs; _i < setEs_1.length; _i++) {\n      var vertex = setEs_1[_i];\n\n      _loop_3(vertex);\n    }\n\n    return leadFlag;\n  };\n\n  return CheckSet;\n}();\n\nexports.CheckSet = CheckSet;","map":{"version":3,"sources":["../../src/util/CheckSet.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @classdesc\r\n * Checkers for dominating and minimal dominating sets\r\n */\r\nvar CheckSet = /** @class */ (function () {\r\n    function CheckSet() {\r\n    }\r\n    /**\r\n     * Checker for a dominating set\r\n     * @param vSet\r\n     * @param givenGraph\r\n     * @returns {boolean}\r\n     * @constructor\r\n     */\r\n    CheckSet.prototype.isExternalStability = function (vSet, givenGraph) {\r\n        var extendedSetofVertex = [];\r\n        for (var _i = 0, vSet_1 = vSet; _i < vSet_1.length; _i++) {\r\n            var vertex = vSet_1[_i];\r\n            extendedSetofVertex.push(vertex);\r\n        }\r\n        //We add vertices adjacent with the chosen one into extended set of vertices\r\n        for (var _a = 0, vSet_2 = vSet; _a < vSet_2.length; _a++) {\r\n            var vertex = vSet_2[_a];\r\n            var _loop_1 = function (edge) {\r\n                if ((edge.vertexOne == vertex) && !extendedSetofVertex.filter(function (v) { return v.equals(edge.vertexTwo); })[0]) {\r\n                    extendedSetofVertex.push(edge.vertexTwo);\r\n                }\r\n                if ((edge.vertexTwo == vertex) && !extendedSetofVertex.filter(function (v) { return v.equals(edge.vertexOne); })[0]) {\r\n                    extendedSetofVertex.push(edge.vertexOne);\r\n                }\r\n            };\r\n            for (var _b = 0, _c = givenGraph.edges; _b < _c.length; _b++) {\r\n                var edge = _c[_b];\r\n                _loop_1(edge);\r\n            }\r\n        }\r\n        var _loop_2 = function (vertex) {\r\n            if (!extendedSetofVertex.filter(function (v) { return v.equals(vertex); })[0])\r\n                return { value: false };\r\n        };\r\n        //We check whether the graph has vertices that are not adjacent to the ones in the extended set\r\n        for (var _d = 0, _e = givenGraph.vertices; _d < _e.length; _d++) {\r\n            var vertex = _e[_d];\r\n            var state_1 = _loop_2(vertex);\r\n            if (typeof state_1 === \"object\")\r\n                return state_1.value;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Checker for minimal dominating set\r\n     * @param setEs\r\n     * @param givenGraph\r\n     * @returns {boolean}\r\n     */\r\n    CheckSet.prototype.isMinimal = function (setEs, givenGraph) {\r\n        var leadFlag = true;\r\n        var flag = true;\r\n        var _loop_3 = function (vertex) {\r\n            var newSet = [];\r\n            setEs.forEach(function (v) {\r\n                if (!v.equals(vertex))\r\n                    newSet.push(v);\r\n            });\r\n            flag = this_1.isExternalStability(newSet, givenGraph);\r\n            if (flag)\r\n                leadFlag = false;\r\n        };\r\n        var this_1 = this;\r\n        for (var _i = 0, setEs_1 = setEs; _i < setEs_1.length; _i++) {\r\n            var vertex = setEs_1[_i];\r\n            _loop_3(vertex);\r\n        }\r\n        return leadFlag;\r\n    };\r\n    return CheckSet;\r\n}());\r\nexports.CheckSet = CheckSet;\r\n//# sourceMappingURL=CheckSet.js.map"]},"metadata":{},"sourceType":"script"}